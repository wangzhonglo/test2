type Request {
	Name string `path:"name,options=you|me"`
}

type Response {
	Message string `json:"message"`
}

service greet-api {
	@handler GreetHandler
	get /from/:name(Request) returns (Response)
}

type STStudentCreateReq {
	Name   string `json:"name"`
	Age    uint64 `json:"age"`
	Gender uint64 `json:"gender"`
}
type STStudentCreateRsp {
	Id uint64 `json:"id"`
}
service greet-api {
	@handler StudentCreateHandler
	post /students(STStudentCreateReq) returns (STStudentCreateRsp)
}

type STStudentDeleteReq {
	Id uint64 `path:"id"`
}
type STStudentDeleteRsp {}
service greet-api {
	@handler StudentDeleteHandler
	delete /students/:id(STStudentDeleteReq) returns (STStudentDeleteRsp)
}

type STStudentUpdateReq {
	Id     uint64 `path:"id"`
	Name   string `json:"name"`
	Age    uint64 `json:"age"`
	Gender uint64 `json:"gender"`
}
type STStudentUpdateRsp {}
service greet-api {
	@handler StudentUpdateHandler
	put /students/:id(STStudentUpdateReq) returns (STStudentUpdateRsp)
}

type STStudentRetrieveyReq {
	Id uint64 `path:"id"`
}
type STStudentRetrieveRsp {
	Id        uint64 `json:"id"`
	Name      string `json:"name"`
	Age       uint64 `json:"age"`
	Gender    uint64 `json:"gender"`
	CreatedAt int64  `json:"createdAt"`
	UpdatedAt int64  `json:"updatedAt"`
}
service greet-api {
	@handler StudentRetrieveHandler
	get /students/:id(STStudentRetrieveyReq) returns (STStudentRetrieveRsp)
}

type STStudentListReq {
	Page   uint64 `json:"page"`
	Limit  uint64 `json:"limit"`
	Id     uint64 `json:"id"`
	Name   string `json:"name"`
	Age    uint64 `json:"age"`
	Gender uint64 `json:"gender"`
}
type STStudentListRsp {
	Total uint64    `json:"total"`
	Items []Student `json:"items"`
}

service greet-api {
	@handler StudentListHandler
	get /students(STStudentListReq) returns (STStudentListRsp)
}

type Student {
	Id        uint64 `json:"id"`
	Name      string `json:"name"`
	Age       uint64 `json:"age"`
	Gender    uint64 `json:"gender"`
	CreatedAt int64  `json:"createdAt"`
	UpdatedAt int64  `json:"updatedAt"`
}

type STGradeCreateReq {
	UserId  uint64  `json:"userId"`
	Chinese float64 `json:"chinese"`
	Math    float64 `json:"math"`
	English float64 `json:"english"`
	Year    uint64  `json:"year"`
	Term    uint64  `json:"term"`
}
type STGradeCreateRsp {
	Id uint64 `json:"id"`
}
service greet-api {
	@handler GradeCreateHandler
	post /grades(STGradeCreateReq) returns (STGradeCreateRsp)
}

type STGradeDeleteReq {
	Id uint64 `path:"id"`
}
type STGradeDeleteRsp {}
service greet-api {
	@handler GradeDeleteHandler
	delete /grades/:id(STGradeDeleteReq) returns (STGradeDeleteRsp)
}

type STGradeUpdateReq {
	Id      uint64  `path:"id"`
	UserId  uint64  `json:"userId"`
	Chinese float64 `json:"chinese"`
	Math    float64 `json:"math"`
	English float64 `json:"english"`
	Year    uint64  `json:"year"`
	Term    uint64  `json:"term"`
}

type STGradeUpdateRsp {}
service greet-api {
	@handler GradeUpdateHandler
	put /grades/:id(STGradeUpdateReq) returns (STGradeUpdateRsp)
}

type STGradeListReq {
	Page    uint64  `json:"page"`
	Limit   uint64  `json:"limit"`
	Id      uint64  `path:"id"`
	UserId  uint64  `json:"userId"`
	Chinese float64 `json:"chinese"`
	Math    float64 `json:"math"`
	English float64 `json:"english"`
	Year    uint64  `json:"year"`
	Term    uint64  `json:"term"`
}
type STGradeListRsp {
	Total uint64  `json:"total"`
	Items []Grade `json:"items"`
}

service greet-api {
	@handler GradeListHandler
	get /grades(STGradeListReq) returns (STGradeListRsp)
}

type STGradeRetrieveyReq {
	Id uint64 `path:"id"`
}

type STGradeRetrieveRsp {
	Id        uint64  `json:"id"`
	UserId    uint64  `json:"userId"`
	Chinese   float64 `json:"chinese"`
	Math      float64 `json:"math"`
	English   float64 `json:"english"`
	CreatedAt int64   `json:"createdAt"`
	UpdatedAt int64   `json:"updatedAt"`
}

service greet-api {
	@handler GradeRetrieveHandler
	get /grades/:id(STGradeRetrieveyReq) returns (STGradeRetrieveRsp)
}

type Grade {
	Id        uint64  `path:"id"`
	UserId    uint64  `json:"userId"`
	Chinese   float64 `json:"chinese"`
	Math      float64 `json:"math"`
	English   float64 `json:"english"`
	CreatedAt int64   `json:"createdAt"`
	UpdatedAt int64   `json:"updatedAt"`
	Year      uint64  `json:"year"`
	Term      uint64  `json:"term"`
}
//学生列表
type STStuCreateReq {
	Name  string `json:"name"`  // 名称
	StuId string `json:"stuId"` //学号
	Age   uint64 `json:"age"`   // 年龄
	Sex   uint64 `json:"sex"`   // 性别
	Grade uint64 `json:"grade"` //年级
	Step  string `json:"step"`  //所在系
}
type STStuCreateRsp {
	Id uint64 `json:"id"`
}
service greet-api {
	@handler StuCreatHandler
	post /stus(STStuCreateReq) returns (STStuCreateRsp)
}

type STStuDeleteReq {
	Id uint64 `path:"id"`
}
type STStuDeleteRsp {}
service greet-api {
	@handler StuDeleteHandler
	delete /stus/:id(STStuDeleteReq) returns (STStuDeleteRsp)
}

type STStuUpdateReq {
	Id    uint64 `path:"id"`
	Name  string `json:"name,optional"`
	StuId string `json:"stuId,optional"`
	Age   uint64 `json:"age,optional"`
	Sex   uint64 `json:"sex,optional"`
	Grade uint64 `json:"grade,optional"`
	Step  string `json:"step,optional"`
}
type STStuUpdateRsp {}
service greet-api {
	@handler StuUpdateHandler
	put /stus/:id(STStuUpdateReq) returns (STStuUpdateRsp)
}

type STStuRetrieveReq {
	Id uint64 `path:"id"`
}
type STStuRetrieveRsp {
	Id        uint64 `json:"id"`
	Name      string `json:"name"`
	StuId     string `json:"stuId"`
	Age       uint64 `json:"age"`
	Sex       uint64 `json:"sex"`
	Grade     uint64 `json:"grade"`
	Step      string `json:"step"`
	CreatedAt int64  `json:"createdAt"`
	UpdatedAt int64  `json:"updatedAt"`
}
service greet-api {
	@handler StuRetrieveHandler
	get /stus/:id(STStuRetrieveReq) returns (STStuRetrieveRsp)
}

type STStuListReq {
	Page  uint64 `form:"page"`
	Limit uint64 `form:"limit"`
	Id    uint64 `form:"id,optional"`
	Name  string `form:"name,optional"`  // 名称
	StuId string `form:"stuId,optional"` //学号
	Age   uint64 `form:"age,optional"`   // 年龄
	Sex   uint64 `form:"sex,optional"`   // 性别
	Grade uint64 `form:"grade,optional"` //年级
	Step  string `form:"step,optional"`
}
type STStuListRsp {
	Total uint64 `json:"total"`
	Items []Stu  `json:"items"`
}

@server(
	jwt: Auth
)
service greet-api {
	@handler StuListHandler
	get /stus(STStuListReq) returns (STStuListRsp)
}

type STResetPassworReq {
	StuId      string `json:"stuId"`
	Password   string `json:"password"`
	RePassword string `json:"rePassword"`
}
type STResetPassworRsp {
}
@server(
	jwt: Auth
)
service greet-api{
	@handler ResetPasswordHandler
	post /reset-password(STResetPassworReq) returns (STResetPassworRsp)
}

type STLoginReq {
	StuId    string `json:"stuId"`
	Password string `json:"password"`
}
type STLoginRsp {
	Token string `json:"token"`
}
service greet-api{
	@handler LoginHandler
	post /login(STLoginReq) returns (STLoginRsp)
}

type Stu {
	Id        uint64 `path:"id""`
	Name      string `json:"name"`
	StuId     string `json:"stuId"`
	Age       uint64 `json:"age"`
	Sex       uint64 `json:"sex"`
	Grade     uint64 `json:"grade"`
	Step      string `json:"step"`
	CreatedAt int64  `json:"creatAt"`
	UpdatedAt int64  `json:"Update"`
}

//成绩表单汇总
type STScoreCreateReq {
	Chinese    float64 `json:"chinese"` // 语文
	CTeacherId string  `json:"cTeacherId"`
	Math       float64 `json:"math"` // 数学
	MTeacherId string  `json:"mTeacherId"`
	English    float64 `json:"english"` // 英语
	ETeacherId string  `json:"eTeacherId"`
	StuId      string  `json:"stuId"`
	Year       uint64  `json:"year"` // 年份
	Term       uint64  `json:"term"` // 学期
}
type STScoreCreateRsp {
	Id uint64 `json:"id"`
}
@server(
	jwt: Auth
)
service greet-api {
	@handler ScoreCreateHandler
	post /scores(STScoreCreateReq) returns (STScoreCreateRsp)
}

type STScoreDeleteReq {
	Id uint64 `path:"id"`
}
type STScoreDeleteRsp {}
@server(
	jwt: Auth
)
service greet-api {
	@handler ScoreDeleteHandler
	delete /scores/:id(STScoreDeleteReq) returns (STScoreDeleteRsp)
}

type STScoreUpdateReq {
	Id         uint64  `path:"id"`
	Chinese    float64 `json:"chinese,optional"` // 语文
	CTeacherId string  `json:"cTeacherId,optional"`
	Math       float64 `json:"math,optional"` // 数学
	MTeacherId string  `json:"mTeacherId,optional"`
	English    float64 `json:"english,optional"` // 英语
	ETeacherId string  `json:"eTeacherId,optional"`
	StuId      string  `json:"stuId,optional"`
	Year       uint64  `json:"year,optional"` // 年份
	Term       uint64  `json:"term,optional"` // 学期
}
type STScoreUpdateRsp {}
@server(
	jwt: Auth
)
service greet-api {
	@handler ScoreUpdateHandler
	put /scores/:id(STScoreUpdateReq) returns (STScoreUpdateRsp)
}

type STScoreRetrieveReq {
	Id uint64 `path:"id"`
}
type STScoreRetrieveRsp {
	Id         uint64  `json:"id"`
	Chinese    float64 `json:"chinese"` // 语文
	CTeacherId string  `json:"cTeacherId"`
	Math       float64 `json:"math"` // 数学
	MTeacherId string  `json:"mTeacherId"`
	English    float64 `json:"english"` // 英语
	ETeacherId string  `json:"eTeacherId"`
	StuId      string  `json:"stuId"`
	Year       uint64  `json:"year"` // 年份
	Term       uint64  `json:"term"` // 学期
	CreatedAt  int64   `json:"createdAt"`
	UpdatedAt  int64   `json:"updatedAt"`
}
@server(
	jwt: Auth
)
service greet-api {
	@handler ScoreRetrieveHandler
	get /scores/:id(STScoreRetrieveReq) returns (STScoreRetrieveRsp)
}

type STScoreListReq {
	Page       uint64  `form:"page"`
	Limit      uint64  `form:"limit"`
	Id         uint64  `form:"id,optional"`
	Chinese    float64 `form:"chinese,optional"` // 语文
	CTeacherId string  `form:"cTeacherId,optional"`
	Math       float64 `form:"math,optional"` // 数学
	MTeacherId string  `form:"mTeacherId,optional"`
	English    float64 `form:"english,optional"` // 英语
	ETeacherId string  `form:"eTeacherId,optional"`
	StuId      string  `form:"stuId,optional"`
	Year       uint64  `form:"year,optional"` // 年份
	Term       uint64  `form:"term,optional"` // 学期
}
type STScoreListRsp {
	Total uint64  `json:"total"`
	Items []Score `json:"items"`
}
service greet-api {
	@handler ScoreListHandler
	get /scores(STScoreListReq) returns (STScoreListRsp)
}

type Score {
	Id         uint64  `json:"id"`
	Chinese    float64 `json:"chinese"` // 语文
	CTeacherId string  `json:"cTeacherId"`
	Math       float64 `json:"math"` // 数学
	MTeacherId string  `json:"mTeacherId"`
	English    float64 `json:"english"` // 英语
	ETeacherId string  `json:"eTeacherId"`
	StuId      string  `json:"stuId"`
	Year       uint64  `json:"year"` // 年份
	Term       uint64  `json:"term"` // 学期
	CreatedAt  int64   `json:"createdAt"`
	UpdatedAt  int64   `json:"updatedAt"`
}

//教师信息
type STTeacherCreateReq {
	Name      string `json:"name"`      // 名称
	TeacherId string `json:"teacherId"` //教师编号
	Step      string `json:"step"`      //所在系
	Course    string `json:"course"`
}
type STTeacherCreateRsp {
	Id uint64 `json:"id"`
}
service greet-api {
	@handler TeacherCreateHandler
	post /teachers(STTeacherCreateReq) returns (STTeacherCreateRsp)
}

type STTeacherDeleteReq {
	Id uint64 `path:"id"`
}
type STTeacherDeleteRsp {}
service greet-api {
	@handler TeacherDeleteHandler
	delete /teachers/:id(STTeacherDeleteReq) returns (STTeacherDeleteRsp)
}

type STTeacherUpdateReq {
	Id        uint64 `path:"id"`
	Name      string `json:"name,optional"`      // 名称
	TeacherId string `json:"teacherId,optional"` //教师编号
	Step      string `json:"step,optional"`      //所在系
	Course    string `json:"course,optional"`
}
type STTeacherUpdateRsp {}
service greet-api {
	@handler TeacherUpdateHandler
	put /teachers/:id(STTeacherUpdateReq) returns (STTeacherUpdateRsp)
}

type STTeacherRetrieveReq {
	Id uint64 `path:"id"`
}
type STTeacherRetrieveRsp {
	Id        uint64 `json:"id"`
	Name      string `json:"name"`      // 名称
	TeacherId string `json:"teacherId"` //教师编号
	Step      string `json:"step"`      //所在系
	Course    string `json:"course"`
	CreatedAt int64  `json:"createdAt"`
	UpdatedAt int64  `json:"updatedAt"`
}
service greet-api {
	@handlerTeacherRetrieveHandler
	get /teachers/:id(STTeacherRetrieveReq) returns (STTeacherRetrieveRsp)
}

type STTeacherListReq {
	Page      uint64 `form:"page"`
	Limit     uint64 `form:"limit"`
	Id        uint64 `form:"id,optional"`
	Name      string `form:"name,optional"`      // 名称
	TeacherId string `form:"teacherId,optional"` //教师编号
	Step      string `form:"step,optional"`      //所在系
	Course    string `form:"course,optional"`
}
type STTeacherListRsp {
	Total uint64    `json:"total"`
	Items []Teacher `json:"items"`
}
service greet-api {
	@handler TeacherListHandler
	get /teachers(STTeacherListReq) returns (STTeacherListRsp)
}

type Teacher {
	Id        uint64 `json:"id"`
	Name      string `json:"name"`      // 名称
	TeacherId string `json:"teacherId"` //教师编号
	Step      string `json:"step"`      //所在系
	Course    string `json:"course"`
	CreatedAt int64  `json:"createdAt"`
	UpdatedAt int64  `json:"updatedAt"`
}

type TResetPassworReq {
	TeacherId  string `json:"teacherId"`
	Password   string `json:"password"`
	RePassword string `json:"rePassword"`
}
type TResetPassworRsp {
}
@server(
	jwt: Auth
)
service greet-api{
	@handler ResetTeacherPasswordHandler
	post /reset-teacherpassword(TResetPassworReq) returns (TResetPassworRsp)
}

type TLoginReq {
	TeacherId string `json:"teacherId"`
	Password  string `json:"password"`
}
type TLoginRsp {
	Token string `json:"token"`
}
service greet-api{
	@handler TeacherLoginHandler
	post /teacherlogin(TLoginReq) returns (TLoginRsp)
}